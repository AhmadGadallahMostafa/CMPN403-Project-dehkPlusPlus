State 49 conflicts: 3 reduce/reduce
State 65 conflicts: 1 reduce/reduce
State 96 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: program statement
    2        | statement NEWLINE

    3 statement: expr

    4 expr: variable_declaration
    5     | const_variable_declaration
    6     | variable_assignment
    7     | function_declaration
    8     | function_call
    9     | if_statement
   10     | do_statement
   11     | while_statement
   12     | switch_statement
   13     | break_statement
   14     | continue_statement
   15     | return_statement
   16     | for_statement
   17     | COMMENT

   18 variable_declaration: variable_type IDENTIFIER SEMICOLON
   19                     | variable_type IDENTIFIER ASSIGN condtional_expr SEMICOLON

   20 CONST_VALUE: INT_VALUE
   21            | FLOAT_VALUE
   22            | STRING_VALUE
   23            | CHAR_VALUE
   24            | BOOL_VALUE_TRUE
   25            | BOOL_VALUE_FALSE

   26 const_variable_declaration: CONSTANT variable_type IDENTIFIER ASSIGN condtional_expr SEMICOLON

   27 variable_type: INT
   28              | FLOAT
   29              | STRING
   30              | CHAR
   31              | BOOL

   32 variable_assignment: IDENTIFIER ASSIGN condtional_expr SEMICOLON

   33 function_declaration: DEF variable_type IDENTIFIER LEFT_PAREN parameter_list RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE
   34                     | DEF VOID IDENTIFIER LEFT_PAREN parameter_list RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE SEMICOLON

   35 parameter_list: parameter_list COMMA parameter
   36               | parameter
   37               | /* empty */

   38 parameter: variable_type IDENTIFIER
   39          | variable_type IDENTIFIER ASSIGN condtional_expr

   40 function_call: IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN SEMICOLON

   41 function_call_in_expr: IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN

   42 argument_list: argument_list COMMA argument
   43              | argument
   44              | /* empty */

   45 argument: condtional_expr
   46         | IDENTIFIER ASSIGN condtional_expr

   47 if_statement: IF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE
   48             | IF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACE
   49             | IF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE elseif_expr

   50 elseif_expr: ELSEIF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE
   51            | ELSEIF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACE
   52            | ELSEIF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE elseif_expr

   53 while_statement: WHILE LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE

   54 do_statement: DO LEFT_BRACE program RIGHT_BRACE WHILE LEFT_PAREN condtional_expr RIGHT_PAREN SEMICOLON

   55 condtional_expr: math_expr
   56                | IDENTIFIER
   57                | function_call_in_expr
   58                | CONST_VALUE

   59 switch_statement: SWITCH LEFT_PAREN IDENTIFIER RIGHT_PAREN LEFT_BRACE switch_case_list RIGHT_BRACE

   60 switch_case_list: switch_case_list switch_case
   61                 | switch_case

   62 switch_case: CASE switch_case_value COLON LEFT_BRACE program RIGHT_BRACE
   63            | DEFAULT COLON LEFT_BRACE program RIGHT_BRACE

   64 switch_case_value: INT_VALUE
   65                  | CHAR_VALUE
   66                  | BOOL_VALUE_TRUE
   67                  | BOOL_VALUE_FALSE

   68 break_statement: BREAK SEMICOLON

   69 continue_statement: CONTINUE SEMICOLON

   70 return_statement: RETURN SEMICOLON
   71                 | RETURN condtional_expr SEMICOLON

   72 for_statement: FOR LEFT_PAREN for_init_expr SEMICOLON condtional_expr SEMICOLON for_loop_do RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE

   73 for_loop_do: final_expr COMMA final_expr
   74            | final_expr

   75 final_expr: condtional_expr
   76           | /* empty */

   77 for_init_expr: variable_type IDENTIFIER
   78              | variable_type IDENTIFIER ASSIGN condtional_expr
   79              | IDENTIFIER ASSIGN condtional_expr
   80              | condtional_expr
   81              | /* empty */

   82 math_expr: math_expr OR math_expr
   83          | math_expr AND math_expr
   84          | NOT math_expr
   85          | math_expr EQUAL math_expr
   86          | math_expr NOTEQUAL math_expr
   87          | math_expr GREATER_THAN math_expr
   88          | math_expr GREATER_THAN_EQUAL math_expr
   89          | math_expr LESS_THAN math_expr
   90          | math_expr LESS_THAN_EQUAL math_expr
   91          | math_expr PLUS math_expr
   92          | math_expr MINUS math_expr
   93          | math_expr TIMES math_expr
   94          | math_expr DIVIDE math_expr
   95          | math_expr MODULUS math_expr
   96          | math_expr EXPONENT math_expr
   97          | LEFT_PAREN math_expr RIGHT_PAREN
   98          | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 27
FLOAT (259) 28
STRING (260) 29
CHAR (261) 30
BOOL (262) 31
VOID (263) 34
FOR (264) 72
WHILE (265) 53 54
DO (266) 54
BREAK (267) 68
CONTINUE (268) 69
IF (269) 47 48 49
ELSE (270) 48 51
ELSEIF (271) 50 51 52
SWITCH (272) 59
CASE (273) 62
DEFAULT (274) 63
CONSTANT (275) 26
RETURN (276) 70 71
DEF (277) 33 34
INT_VALUE (278) 20 64
FLOAT_VALUE (279) 21
STRING_VALUE (280) 22
CHAR_VALUE (281) 23 65
BOOL_VALUE_TRUE (282) 24 66
BOOL_VALUE_FALSE (283) 25 67
COMMENT (284) 17
IDENTIFIER (285) 18 19 26 32 33 34 38 39 40 41 46 56 59 77 78 79 98
ASSIGN (286) 19 26 32 39 46 78 79
PLUS (287) 91
MINUS (288) 92
TIMES (289) 93
DIVIDE (290) 94
MODULUS (291) 95
EXPONENT (292) 96
AND (293) 83
OR (294) 82
NOT (295) 84
EQUAL (296) 85
NOTEQUAL (297) 86
GREATER_THAN (298) 87
GREATER_THAN_EQUAL (299) 88
LESS_THAN (300) 89
LESS_THAN_EQUAL (301) 90
LEFT_PAREN (302) 33 34 40 41 47 48 49 50 51 52 53 54 59 72 97
RIGHT_PAREN (303) 33 34 40 41 47 48 49 50 51 52 53 54 59 72 97
LEFT_BRACE (304) 33 34 47 48 49 50 51 52 53 54 59 62 63 72
RIGHT_BRACE (305) 33 34 47 48 49 50 51 52 53 54 59 62 63 72
COMMA (306) 35 42 73
SEMICOLON (307) 18 19 26 32 34 40 54 68 69 70 71 72
COLON (308) 62 63
NEWLINE (309) 2


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1 2, on right: 0 1 33 34 47 48 49 50 51 52 53 54 62 63
    72
statement (57)
    on left: 3, on right: 1 2
expr (58)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17, on right: 3
variable_declaration (59)
    on left: 18 19, on right: 4
CONST_VALUE (60)
    on left: 20 21 22 23 24 25, on right: 58
const_variable_declaration (61)
    on left: 26, on right: 5
variable_type (62)
    on left: 27 28 29 30 31, on right: 18 19 26 33 38 39 77 78
variable_assignment (63)
    on left: 32, on right: 6
function_declaration (64)
    on left: 33 34, on right: 7
parameter_list (65)
    on left: 35 36 37, on right: 33 34 35
parameter (66)
    on left: 38 39, on right: 35 36
function_call (67)
    on left: 40, on right: 8
function_call_in_expr (68)
    on left: 41, on right: 57
argument_list (69)
    on left: 42 43 44, on right: 40 41 42
argument (70)
    on left: 45 46, on right: 42 43
if_statement (71)
    on left: 47 48 49, on right: 9
elseif_expr (72)
    on left: 50 51 52, on right: 49 52
while_statement (73)
    on left: 53, on right: 11
do_statement (74)
    on left: 54, on right: 10
condtional_expr (75)
    on left: 55 56 57 58, on right: 19 26 32 39 45 46 47 48 49 50 51
    52 53 54 71 72 75 78 79 80
switch_statement (76)
    on left: 59, on right: 12
switch_case_list (77)
    on left: 60 61, on right: 59 60
switch_case (78)
    on left: 62 63, on right: 60 61
switch_case_value (79)
    on left: 64 65 66 67, on right: 62
break_statement (80)
    on left: 68, on right: 13
continue_statement (81)
    on left: 69, on right: 14
return_statement (82)
    on left: 70 71, on right: 15
for_statement (83)
    on left: 72, on right: 16
for_loop_do (84)
    on left: 73 74, on right: 72
final_expr (85)
    on left: 75 76, on right: 73 74
for_init_expr (86)
    on left: 77 78 79 80 81, on right: 72
math_expr (87)
    on left: 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98, on right:
    55 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97


state 0

    0 $accept: . program $end

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    STRING      shift, and go to state 3
    CHAR        shift, and go to state 4
    BOOL        shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    DO          shift, and go to state 8
    BREAK       shift, and go to state 9
    CONTINUE    shift, and go to state 10
    IF          shift, and go to state 11
    SWITCH      shift, and go to state 12
    CONSTANT    shift, and go to state 13
    RETURN      shift, and go to state 14
    DEF         shift, and go to state 15
    COMMENT     shift, and go to state 16
    IDENTIFIER  shift, and go to state 17

    program                     go to state 18
    statement                   go to state 19
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 1

   27 variable_type: INT .

    $default  reduce using rule 27 (variable_type)


state 2

   28 variable_type: FLOAT .

    $default  reduce using rule 28 (variable_type)


state 3

   29 variable_type: STRING .

    $default  reduce using rule 29 (variable_type)


state 4

   30 variable_type: CHAR .

    $default  reduce using rule 30 (variable_type)


state 5

   31 variable_type: BOOL .

    $default  reduce using rule 31 (variable_type)


state 6

   72 for_statement: FOR . LEFT_PAREN for_init_expr SEMICOLON condtional_expr SEMICOLON for_loop_do RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE

    LEFT_PAREN  shift, and go to state 35


state 7

   53 while_statement: WHILE . LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE

    LEFT_PAREN  shift, and go to state 36


state 8

   54 do_statement: DO . LEFT_BRACE program RIGHT_BRACE WHILE LEFT_PAREN condtional_expr RIGHT_PAREN SEMICOLON

    LEFT_BRACE  shift, and go to state 37


state 9

   68 break_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 38


state 10

   69 continue_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 39


state 11

   47 if_statement: IF . LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE
   48             | IF . LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACE
   49             | IF . LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE elseif_expr

    LEFT_PAREN  shift, and go to state 40


state 12

   59 switch_statement: SWITCH . LEFT_PAREN IDENTIFIER RIGHT_PAREN LEFT_BRACE switch_case_list RIGHT_BRACE

    LEFT_PAREN  shift, and go to state 41


state 13

   26 const_variable_declaration: CONSTANT . variable_type IDENTIFIER ASSIGN condtional_expr SEMICOLON

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    STRING  shift, and go to state 3
    CHAR    shift, and go to state 4
    BOOL    shift, and go to state 5

    variable_type  go to state 42


state 14

   70 return_statement: RETURN . SEMICOLON
   71                 | RETURN . condtional_expr SEMICOLON

    INT_VALUE         shift, and go to state 43
    FLOAT_VALUE       shift, and go to state 44
    STRING_VALUE      shift, and go to state 45
    CHAR_VALUE        shift, and go to state 46
    BOOL_VALUE_TRUE   shift, and go to state 47
    BOOL_VALUE_FALSE  shift, and go to state 48
    IDENTIFIER        shift, and go to state 49
    NOT               shift, and go to state 50
    LEFT_PAREN        shift, and go to state 51
    SEMICOLON         shift, and go to state 52

    CONST_VALUE            go to state 53
    function_call_in_expr  go to state 54
    condtional_expr        go to state 55
    math_expr              go to state 56


state 15

   33 function_declaration: DEF . variable_type IDENTIFIER LEFT_PAREN parameter_list RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE
   34                     | DEF . VOID IDENTIFIER LEFT_PAREN parameter_list RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE SEMICOLON

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    STRING  shift, and go to state 3
    CHAR    shift, and go to state 4
    BOOL    shift, and go to state 5
    VOID    shift, and go to state 57

    variable_type  go to state 58


state 16

   17 expr: COMMENT .

    $default  reduce using rule 17 (expr)


state 17

   32 variable_assignment: IDENTIFIER . ASSIGN condtional_expr SEMICOLON
   40 function_call: IDENTIFIER . LEFT_PAREN argument_list RIGHT_PAREN SEMICOLON

    ASSIGN      shift, and go to state 59
    LEFT_PAREN  shift, and go to state 60


state 18

    0 $accept: program . $end
    1 program: program . statement

    $end        shift, and go to state 61
    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    STRING      shift, and go to state 3
    CHAR        shift, and go to state 4
    BOOL        shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    DO          shift, and go to state 8
    BREAK       shift, and go to state 9
    CONTINUE    shift, and go to state 10
    IF          shift, and go to state 11
    SWITCH      shift, and go to state 12
    CONSTANT    shift, and go to state 13
    RETURN      shift, and go to state 14
    DEF         shift, and go to state 15
    COMMENT     shift, and go to state 16
    IDENTIFIER  shift, and go to state 17

    statement                   go to state 62
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 19

    2 program: statement . NEWLINE

    NEWLINE  shift, and go to state 63


state 20

    3 statement: expr .

    $default  reduce using rule 3 (statement)


state 21

    4 expr: variable_declaration .

    $default  reduce using rule 4 (expr)


state 22

    5 expr: const_variable_declaration .

    $default  reduce using rule 5 (expr)


state 23

   18 variable_declaration: variable_type . IDENTIFIER SEMICOLON
   19                     | variable_type . IDENTIFIER ASSIGN condtional_expr SEMICOLON

    IDENTIFIER  shift, and go to state 64


state 24

    6 expr: variable_assignment .

    $default  reduce using rule 6 (expr)


state 25

    7 expr: function_declaration .

    $default  reduce using rule 7 (expr)


state 26

    8 expr: function_call .

    $default  reduce using rule 8 (expr)


state 27

    9 expr: if_statement .

    $default  reduce using rule 9 (expr)


state 28

   11 expr: while_statement .

    $default  reduce using rule 11 (expr)


state 29

   10 expr: do_statement .

    $default  reduce using rule 10 (expr)


state 30

   12 expr: switch_statement .

    $default  reduce using rule 12 (expr)


state 31

   13 expr: break_statement .

    $default  reduce using rule 13 (expr)


state 32

   14 expr: continue_statement .

    $default  reduce using rule 14 (expr)


state 33

   15 expr: return_statement .

    $default  reduce using rule 15 (expr)


state 34

   16 expr: for_statement .

    $default  reduce using rule 16 (expr)


state 35

   72 for_statement: FOR LEFT_PAREN . for_init_expr SEMICOLON condtional_expr SEMICOLON for_loop_do RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE

    INT               shift, and go to state 1
    FLOAT             shift, and go to state 2
    STRING            shift, and go to state 3
    CHAR              shift, and go to state 4
    BOOL              shift, and go to state 5
    INT_VALUE         shift, and go to state 43
    FLOAT_VALUE       shift, and go to state 44
    STRING_VALUE      shift, and go to state 45
    CHAR_VALUE        shift, and go to state 46
    BOOL_VALUE_TRUE   shift, and go to state 47
    BOOL_VALUE_FALSE  shift, and go to state 48
    IDENTIFIER        shift, and go to state 65
    NOT               shift, and go to state 50
    LEFT_PAREN        shift, and go to state 51

    $default  reduce using rule 81 (for_init_expr)

    CONST_VALUE            go to state 53
    variable_type          go to state 66
    function_call_in_expr  go to state 54
    condtional_expr        go to state 67
    for_init_expr          go to state 68
    math_expr              go to state 56


state 36

   53 while_statement: WHILE LEFT_PAREN . condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE

    INT_VALUE         shift, and go to state 43
    FLOAT_VALUE       shift, and go to state 44
    STRING_VALUE      shift, and go to state 45
    CHAR_VALUE        shift, and go to state 46
    BOOL_VALUE_TRUE   shift, and go to state 47
    BOOL_VALUE_FALSE  shift, and go to state 48
    IDENTIFIER        shift, and go to state 49
    NOT               shift, and go to state 50
    LEFT_PAREN        shift, and go to state 51

    CONST_VALUE            go to state 53
    function_call_in_expr  go to state 54
    condtional_expr        go to state 69
    math_expr              go to state 56


state 37

   54 do_statement: DO LEFT_BRACE . program RIGHT_BRACE WHILE LEFT_PAREN condtional_expr RIGHT_PAREN SEMICOLON

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    STRING      shift, and go to state 3
    CHAR        shift, and go to state 4
    BOOL        shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    DO          shift, and go to state 8
    BREAK       shift, and go to state 9
    CONTINUE    shift, and go to state 10
    IF          shift, and go to state 11
    SWITCH      shift, and go to state 12
    CONSTANT    shift, and go to state 13
    RETURN      shift, and go to state 14
    DEF         shift, and go to state 15
    COMMENT     shift, and go to state 16
    IDENTIFIER  shift, and go to state 17

    program                     go to state 70
    statement                   go to state 19
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 38

   68 break_statement: BREAK SEMICOLON .

    $default  reduce using rule 68 (break_statement)


state 39

   69 continue_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 69 (continue_statement)


state 40

   47 if_statement: IF LEFT_PAREN . condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE
   48             | IF LEFT_PAREN . condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACE
   49             | IF LEFT_PAREN . condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE elseif_expr

    INT_VALUE         shift, and go to state 43
    FLOAT_VALUE       shift, and go to state 44
    STRING_VALUE      shift, and go to state 45
    CHAR_VALUE        shift, and go to state 46
    BOOL_VALUE_TRUE   shift, and go to state 47
    BOOL_VALUE_FALSE  shift, and go to state 48
    IDENTIFIER        shift, and go to state 49
    NOT               shift, and go to state 50
    LEFT_PAREN        shift, and go to state 51

    CONST_VALUE            go to state 53
    function_call_in_expr  go to state 54
    condtional_expr        go to state 71
    math_expr              go to state 56


state 41

   59 switch_statement: SWITCH LEFT_PAREN . IDENTIFIER RIGHT_PAREN LEFT_BRACE switch_case_list RIGHT_BRACE

    IDENTIFIER  shift, and go to state 72


state 42

   26 const_variable_declaration: CONSTANT variable_type . IDENTIFIER ASSIGN condtional_expr SEMICOLON

    IDENTIFIER  shift, and go to state 73


state 43

   20 CONST_VALUE: INT_VALUE .

    $default  reduce using rule 20 (CONST_VALUE)


state 44

   21 CONST_VALUE: FLOAT_VALUE .

    $default  reduce using rule 21 (CONST_VALUE)


state 45

   22 CONST_VALUE: STRING_VALUE .

    $default  reduce using rule 22 (CONST_VALUE)


state 46

   23 CONST_VALUE: CHAR_VALUE .

    $default  reduce using rule 23 (CONST_VALUE)


state 47

   24 CONST_VALUE: BOOL_VALUE_TRUE .

    $default  reduce using rule 24 (CONST_VALUE)


state 48

   25 CONST_VALUE: BOOL_VALUE_FALSE .

    $default  reduce using rule 25 (CONST_VALUE)


state 49

   41 function_call_in_expr: IDENTIFIER . LEFT_PAREN argument_list RIGHT_PAREN
   56 condtional_expr: IDENTIFIER .
   98 math_expr: IDENTIFIER .

    LEFT_PAREN  shift, and go to state 74

    RIGHT_PAREN  reduce using rule 56 (condtional_expr)
    RIGHT_PAREN  [reduce using rule 98 (math_expr)]
    COMMA        reduce using rule 56 (condtional_expr)
    COMMA        [reduce using rule 98 (math_expr)]
    SEMICOLON    reduce using rule 56 (condtional_expr)
    SEMICOLON    [reduce using rule 98 (math_expr)]
    $default     reduce using rule 98 (math_expr)


state 50

   84 math_expr: NOT . math_expr

    IDENTIFIER  shift, and go to state 75
    NOT         shift, and go to state 50
    LEFT_PAREN  shift, and go to state 51

    math_expr  go to state 76


state 51

   97 math_expr: LEFT_PAREN . math_expr RIGHT_PAREN

    IDENTIFIER  shift, and go to state 75
    NOT         shift, and go to state 50
    LEFT_PAREN  shift, and go to state 51

    math_expr  go to state 77


state 52

   70 return_statement: RETURN SEMICOLON .

    $default  reduce using rule 70 (return_statement)


state 53

   58 condtional_expr: CONST_VALUE .

    $default  reduce using rule 58 (condtional_expr)


state 54

   57 condtional_expr: function_call_in_expr .

    $default  reduce using rule 57 (condtional_expr)


state 55

   71 return_statement: RETURN condtional_expr . SEMICOLON

    SEMICOLON  shift, and go to state 78


state 56

   55 condtional_expr: math_expr .
   82 math_expr: math_expr . OR math_expr
   83          | math_expr . AND math_expr
   85          | math_expr . EQUAL math_expr
   86          | math_expr . NOTEQUAL math_expr
   87          | math_expr . GREATER_THAN math_expr
   88          | math_expr . GREATER_THAN_EQUAL math_expr
   89          | math_expr . LESS_THAN math_expr
   90          | math_expr . LESS_THAN_EQUAL math_expr
   91          | math_expr . PLUS math_expr
   92          | math_expr . MINUS math_expr
   93          | math_expr . TIMES math_expr
   94          | math_expr . DIVIDE math_expr
   95          | math_expr . MODULUS math_expr
   96          | math_expr . EXPONENT math_expr

    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TIMES               shift, and go to state 81
    DIVIDE              shift, and go to state 82
    MODULUS             shift, and go to state 83
    EXPONENT            shift, and go to state 84
    AND                 shift, and go to state 85
    OR                  shift, and go to state 86
    EQUAL               shift, and go to state 87
    NOTEQUAL            shift, and go to state 88
    GREATER_THAN        shift, and go to state 89
    GREATER_THAN_EQUAL  shift, and go to state 90
    LESS_THAN           shift, and go to state 91
    LESS_THAN_EQUAL     shift, and go to state 92

    $default  reduce using rule 55 (condtional_expr)


state 57

   34 function_declaration: DEF VOID . IDENTIFIER LEFT_PAREN parameter_list RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE SEMICOLON

    IDENTIFIER  shift, and go to state 93


state 58

   33 function_declaration: DEF variable_type . IDENTIFIER LEFT_PAREN parameter_list RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE

    IDENTIFIER  shift, and go to state 94


state 59

   32 variable_assignment: IDENTIFIER ASSIGN . condtional_expr SEMICOLON

    INT_VALUE         shift, and go to state 43
    FLOAT_VALUE       shift, and go to state 44
    STRING_VALUE      shift, and go to state 45
    CHAR_VALUE        shift, and go to state 46
    BOOL_VALUE_TRUE   shift, and go to state 47
    BOOL_VALUE_FALSE  shift, and go to state 48
    IDENTIFIER        shift, and go to state 49
    NOT               shift, and go to state 50
    LEFT_PAREN        shift, and go to state 51

    CONST_VALUE            go to state 53
    function_call_in_expr  go to state 54
    condtional_expr        go to state 95
    math_expr              go to state 56


state 60

   40 function_call: IDENTIFIER LEFT_PAREN . argument_list RIGHT_PAREN SEMICOLON

    INT_VALUE         shift, and go to state 43
    FLOAT_VALUE       shift, and go to state 44
    STRING_VALUE      shift, and go to state 45
    CHAR_VALUE        shift, and go to state 46
    BOOL_VALUE_TRUE   shift, and go to state 47
    BOOL_VALUE_FALSE  shift, and go to state 48
    IDENTIFIER        shift, and go to state 96
    NOT               shift, and go to state 50
    LEFT_PAREN        shift, and go to state 51

    $default  reduce using rule 44 (argument_list)

    CONST_VALUE            go to state 53
    function_call_in_expr  go to state 54
    argument_list          go to state 97
    argument               go to state 98
    condtional_expr        go to state 99
    math_expr              go to state 56


state 61

    0 $accept: program $end .

    $default  accept


state 62

    1 program: program statement .

    $default  reduce using rule 1 (program)


state 63

    2 program: statement NEWLINE .

    $default  reduce using rule 2 (program)


state 64

   18 variable_declaration: variable_type IDENTIFIER . SEMICOLON
   19                     | variable_type IDENTIFIER . ASSIGN condtional_expr SEMICOLON

    ASSIGN     shift, and go to state 100
    SEMICOLON  shift, and go to state 101


state 65

   41 function_call_in_expr: IDENTIFIER . LEFT_PAREN argument_list RIGHT_PAREN
   56 condtional_expr: IDENTIFIER .
   79 for_init_expr: IDENTIFIER . ASSIGN condtional_expr
   98 math_expr: IDENTIFIER .

    ASSIGN      shift, and go to state 102
    LEFT_PAREN  shift, and go to state 74

    SEMICOLON  reduce using rule 56 (condtional_expr)
    SEMICOLON  [reduce using rule 98 (math_expr)]
    $default   reduce using rule 98 (math_expr)


state 66

   77 for_init_expr: variable_type . IDENTIFIER
   78              | variable_type . IDENTIFIER ASSIGN condtional_expr

    IDENTIFIER  shift, and go to state 103


state 67

   80 for_init_expr: condtional_expr .

    $default  reduce using rule 80 (for_init_expr)


state 68

   72 for_statement: FOR LEFT_PAREN for_init_expr . SEMICOLON condtional_expr SEMICOLON for_loop_do RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE

    SEMICOLON  shift, and go to state 104


state 69

   53 while_statement: WHILE LEFT_PAREN condtional_expr . RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE

    RIGHT_PAREN  shift, and go to state 105


state 70

    1 program: program . statement
   54 do_statement: DO LEFT_BRACE program . RIGHT_BRACE WHILE LEFT_PAREN condtional_expr RIGHT_PAREN SEMICOLON

    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    STRING       shift, and go to state 3
    CHAR         shift, and go to state 4
    BOOL         shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    DO           shift, and go to state 8
    BREAK        shift, and go to state 9
    CONTINUE     shift, and go to state 10
    IF           shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONSTANT     shift, and go to state 13
    RETURN       shift, and go to state 14
    DEF          shift, and go to state 15
    COMMENT      shift, and go to state 16
    IDENTIFIER   shift, and go to state 17
    RIGHT_BRACE  shift, and go to state 106

    statement                   go to state 62
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 71

   47 if_statement: IF LEFT_PAREN condtional_expr . RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE
   48             | IF LEFT_PAREN condtional_expr . RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACE
   49             | IF LEFT_PAREN condtional_expr . RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE elseif_expr

    RIGHT_PAREN  shift, and go to state 107


state 72

   59 switch_statement: SWITCH LEFT_PAREN IDENTIFIER . RIGHT_PAREN LEFT_BRACE switch_case_list RIGHT_BRACE

    RIGHT_PAREN  shift, and go to state 108


state 73

   26 const_variable_declaration: CONSTANT variable_type IDENTIFIER . ASSIGN condtional_expr SEMICOLON

    ASSIGN  shift, and go to state 109


state 74

   41 function_call_in_expr: IDENTIFIER LEFT_PAREN . argument_list RIGHT_PAREN

    INT_VALUE         shift, and go to state 43
    FLOAT_VALUE       shift, and go to state 44
    STRING_VALUE      shift, and go to state 45
    CHAR_VALUE        shift, and go to state 46
    BOOL_VALUE_TRUE   shift, and go to state 47
    BOOL_VALUE_FALSE  shift, and go to state 48
    IDENTIFIER        shift, and go to state 96
    NOT               shift, and go to state 50
    LEFT_PAREN        shift, and go to state 51

    $default  reduce using rule 44 (argument_list)

    CONST_VALUE            go to state 53
    function_call_in_expr  go to state 54
    argument_list          go to state 110
    argument               go to state 98
    condtional_expr        go to state 99
    math_expr              go to state 56


state 75

   98 math_expr: IDENTIFIER .

    $default  reduce using rule 98 (math_expr)


state 76

   82 math_expr: math_expr . OR math_expr
   83          | math_expr . AND math_expr
   84          | NOT math_expr .
   85          | math_expr . EQUAL math_expr
   86          | math_expr . NOTEQUAL math_expr
   87          | math_expr . GREATER_THAN math_expr
   88          | math_expr . GREATER_THAN_EQUAL math_expr
   89          | math_expr . LESS_THAN math_expr
   90          | math_expr . LESS_THAN_EQUAL math_expr
   91          | math_expr . PLUS math_expr
   92          | math_expr . MINUS math_expr
   93          | math_expr . TIMES math_expr
   94          | math_expr . DIVIDE math_expr
   95          | math_expr . MODULUS math_expr
   96          | math_expr . EXPONENT math_expr

    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TIMES               shift, and go to state 81
    DIVIDE              shift, and go to state 82
    MODULUS             shift, and go to state 83
    EXPONENT            shift, and go to state 84
    EQUAL               shift, and go to state 87
    NOTEQUAL            shift, and go to state 88
    GREATER_THAN        shift, and go to state 89
    GREATER_THAN_EQUAL  shift, and go to state 90
    LESS_THAN           shift, and go to state 91
    LESS_THAN_EQUAL     shift, and go to state 92

    $default  reduce using rule 84 (math_expr)


state 77

   82 math_expr: math_expr . OR math_expr
   83          | math_expr . AND math_expr
   85          | math_expr . EQUAL math_expr
   86          | math_expr . NOTEQUAL math_expr
   87          | math_expr . GREATER_THAN math_expr
   88          | math_expr . GREATER_THAN_EQUAL math_expr
   89          | math_expr . LESS_THAN math_expr
   90          | math_expr . LESS_THAN_EQUAL math_expr
   91          | math_expr . PLUS math_expr
   92          | math_expr . MINUS math_expr
   93          | math_expr . TIMES math_expr
   94          | math_expr . DIVIDE math_expr
   95          | math_expr . MODULUS math_expr
   96          | math_expr . EXPONENT math_expr
   97          | LEFT_PAREN math_expr . RIGHT_PAREN

    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TIMES               shift, and go to state 81
    DIVIDE              shift, and go to state 82
    MODULUS             shift, and go to state 83
    EXPONENT            shift, and go to state 84
    AND                 shift, and go to state 85
    OR                  shift, and go to state 86
    EQUAL               shift, and go to state 87
    NOTEQUAL            shift, and go to state 88
    GREATER_THAN        shift, and go to state 89
    GREATER_THAN_EQUAL  shift, and go to state 90
    LESS_THAN           shift, and go to state 91
    LESS_THAN_EQUAL     shift, and go to state 92
    RIGHT_PAREN         shift, and go to state 111


state 78

   71 return_statement: RETURN condtional_expr SEMICOLON .

    $default  reduce using rule 71 (return_statement)


state 79

   91 math_expr: math_expr PLUS . math_expr

    IDENTIFIER  shift, and go to state 75
    NOT         shift, and go to state 50
    LEFT_PAREN  shift, and go to state 51

    math_expr  go to state 112


state 80

   92 math_expr: math_expr MINUS . math_expr

    IDENTIFIER  shift, and go to state 75
    NOT         shift, and go to state 50
    LEFT_PAREN  shift, and go to state 51

    math_expr  go to state 113


state 81

   93 math_expr: math_expr TIMES . math_expr

    IDENTIFIER  shift, and go to state 75
    NOT         shift, and go to state 50
    LEFT_PAREN  shift, and go to state 51

    math_expr  go to state 114


state 82

   94 math_expr: math_expr DIVIDE . math_expr

    IDENTIFIER  shift, and go to state 75
    NOT         shift, and go to state 50
    LEFT_PAREN  shift, and go to state 51

    math_expr  go to state 115


state 83

   95 math_expr: math_expr MODULUS . math_expr

    IDENTIFIER  shift, and go to state 75
    NOT         shift, and go to state 50
    LEFT_PAREN  shift, and go to state 51

    math_expr  go to state 116


state 84

   96 math_expr: math_expr EXPONENT . math_expr

    IDENTIFIER  shift, and go to state 75
    NOT         shift, and go to state 50
    LEFT_PAREN  shift, and go to state 51

    math_expr  go to state 117


state 85

   83 math_expr: math_expr AND . math_expr

    IDENTIFIER  shift, and go to state 75
    NOT         shift, and go to state 50
    LEFT_PAREN  shift, and go to state 51

    math_expr  go to state 118


state 86

   82 math_expr: math_expr OR . math_expr

    IDENTIFIER  shift, and go to state 75
    NOT         shift, and go to state 50
    LEFT_PAREN  shift, and go to state 51

    math_expr  go to state 119


state 87

   85 math_expr: math_expr EQUAL . math_expr

    IDENTIFIER  shift, and go to state 75
    NOT         shift, and go to state 50
    LEFT_PAREN  shift, and go to state 51

    math_expr  go to state 120


state 88

   86 math_expr: math_expr NOTEQUAL . math_expr

    IDENTIFIER  shift, and go to state 75
    NOT         shift, and go to state 50
    LEFT_PAREN  shift, and go to state 51

    math_expr  go to state 121


state 89

   87 math_expr: math_expr GREATER_THAN . math_expr

    IDENTIFIER  shift, and go to state 75
    NOT         shift, and go to state 50
    LEFT_PAREN  shift, and go to state 51

    math_expr  go to state 122


state 90

   88 math_expr: math_expr GREATER_THAN_EQUAL . math_expr

    IDENTIFIER  shift, and go to state 75
    NOT         shift, and go to state 50
    LEFT_PAREN  shift, and go to state 51

    math_expr  go to state 123


state 91

   89 math_expr: math_expr LESS_THAN . math_expr

    IDENTIFIER  shift, and go to state 75
    NOT         shift, and go to state 50
    LEFT_PAREN  shift, and go to state 51

    math_expr  go to state 124


state 92

   90 math_expr: math_expr LESS_THAN_EQUAL . math_expr

    IDENTIFIER  shift, and go to state 75
    NOT         shift, and go to state 50
    LEFT_PAREN  shift, and go to state 51

    math_expr  go to state 125


state 93

   34 function_declaration: DEF VOID IDENTIFIER . LEFT_PAREN parameter_list RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE SEMICOLON

    LEFT_PAREN  shift, and go to state 126


state 94

   33 function_declaration: DEF variable_type IDENTIFIER . LEFT_PAREN parameter_list RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE

    LEFT_PAREN  shift, and go to state 127


state 95

   32 variable_assignment: IDENTIFIER ASSIGN condtional_expr . SEMICOLON

    SEMICOLON  shift, and go to state 128


state 96

   41 function_call_in_expr: IDENTIFIER . LEFT_PAREN argument_list RIGHT_PAREN
   46 argument: IDENTIFIER . ASSIGN condtional_expr
   56 condtional_expr: IDENTIFIER .
   98 math_expr: IDENTIFIER .

    ASSIGN      shift, and go to state 129
    LEFT_PAREN  shift, and go to state 74

    RIGHT_PAREN  reduce using rule 56 (condtional_expr)
    RIGHT_PAREN  [reduce using rule 98 (math_expr)]
    COMMA        reduce using rule 56 (condtional_expr)
    COMMA        [reduce using rule 98 (math_expr)]
    $default     reduce using rule 98 (math_expr)


state 97

   40 function_call: IDENTIFIER LEFT_PAREN argument_list . RIGHT_PAREN SEMICOLON
   42 argument_list: argument_list . COMMA argument

    RIGHT_PAREN  shift, and go to state 130
    COMMA        shift, and go to state 131


state 98

   43 argument_list: argument .

    $default  reduce using rule 43 (argument_list)


state 99

   45 argument: condtional_expr .

    $default  reduce using rule 45 (argument)


state 100

   19 variable_declaration: variable_type IDENTIFIER ASSIGN . condtional_expr SEMICOLON

    INT_VALUE         shift, and go to state 43
    FLOAT_VALUE       shift, and go to state 44
    STRING_VALUE      shift, and go to state 45
    CHAR_VALUE        shift, and go to state 46
    BOOL_VALUE_TRUE   shift, and go to state 47
    BOOL_VALUE_FALSE  shift, and go to state 48
    IDENTIFIER        shift, and go to state 49
    NOT               shift, and go to state 50
    LEFT_PAREN        shift, and go to state 51

    CONST_VALUE            go to state 53
    function_call_in_expr  go to state 54
    condtional_expr        go to state 132
    math_expr              go to state 56


state 101

   18 variable_declaration: variable_type IDENTIFIER SEMICOLON .

    $default  reduce using rule 18 (variable_declaration)


state 102

   79 for_init_expr: IDENTIFIER ASSIGN . condtional_expr

    INT_VALUE         shift, and go to state 43
    FLOAT_VALUE       shift, and go to state 44
    STRING_VALUE      shift, and go to state 45
    CHAR_VALUE        shift, and go to state 46
    BOOL_VALUE_TRUE   shift, and go to state 47
    BOOL_VALUE_FALSE  shift, and go to state 48
    IDENTIFIER        shift, and go to state 49
    NOT               shift, and go to state 50
    LEFT_PAREN        shift, and go to state 51

    CONST_VALUE            go to state 53
    function_call_in_expr  go to state 54
    condtional_expr        go to state 133
    math_expr              go to state 56


state 103

   77 for_init_expr: variable_type IDENTIFIER .
   78              | variable_type IDENTIFIER . ASSIGN condtional_expr

    ASSIGN  shift, and go to state 134

    $default  reduce using rule 77 (for_init_expr)


state 104

   72 for_statement: FOR LEFT_PAREN for_init_expr SEMICOLON . condtional_expr SEMICOLON for_loop_do RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE

    INT_VALUE         shift, and go to state 43
    FLOAT_VALUE       shift, and go to state 44
    STRING_VALUE      shift, and go to state 45
    CHAR_VALUE        shift, and go to state 46
    BOOL_VALUE_TRUE   shift, and go to state 47
    BOOL_VALUE_FALSE  shift, and go to state 48
    IDENTIFIER        shift, and go to state 49
    NOT               shift, and go to state 50
    LEFT_PAREN        shift, and go to state 51

    CONST_VALUE            go to state 53
    function_call_in_expr  go to state 54
    condtional_expr        go to state 135
    math_expr              go to state 56


state 105

   53 while_statement: WHILE LEFT_PAREN condtional_expr RIGHT_PAREN . LEFT_BRACE program RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 136


state 106

   54 do_statement: DO LEFT_BRACE program RIGHT_BRACE . WHILE LEFT_PAREN condtional_expr RIGHT_PAREN SEMICOLON

    WHILE  shift, and go to state 137


state 107

   47 if_statement: IF LEFT_PAREN condtional_expr RIGHT_PAREN . LEFT_BRACE program RIGHT_BRACE
   48             | IF LEFT_PAREN condtional_expr RIGHT_PAREN . LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACE
   49             | IF LEFT_PAREN condtional_expr RIGHT_PAREN . LEFT_BRACE program RIGHT_BRACE elseif_expr

    LEFT_BRACE  shift, and go to state 138


state 108

   59 switch_statement: SWITCH LEFT_PAREN IDENTIFIER RIGHT_PAREN . LEFT_BRACE switch_case_list RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 139


state 109

   26 const_variable_declaration: CONSTANT variable_type IDENTIFIER ASSIGN . condtional_expr SEMICOLON

    INT_VALUE         shift, and go to state 43
    FLOAT_VALUE       shift, and go to state 44
    STRING_VALUE      shift, and go to state 45
    CHAR_VALUE        shift, and go to state 46
    BOOL_VALUE_TRUE   shift, and go to state 47
    BOOL_VALUE_FALSE  shift, and go to state 48
    IDENTIFIER        shift, and go to state 49
    NOT               shift, and go to state 50
    LEFT_PAREN        shift, and go to state 51

    CONST_VALUE            go to state 53
    function_call_in_expr  go to state 54
    condtional_expr        go to state 140
    math_expr              go to state 56


state 110

   41 function_call_in_expr: IDENTIFIER LEFT_PAREN argument_list . RIGHT_PAREN
   42 argument_list: argument_list . COMMA argument

    RIGHT_PAREN  shift, and go to state 141
    COMMA        shift, and go to state 131


state 111

   97 math_expr: LEFT_PAREN math_expr RIGHT_PAREN .

    $default  reduce using rule 97 (math_expr)


state 112

   82 math_expr: math_expr . OR math_expr
   83          | math_expr . AND math_expr
   85          | math_expr . EQUAL math_expr
   86          | math_expr . NOTEQUAL math_expr
   87          | math_expr . GREATER_THAN math_expr
   88          | math_expr . GREATER_THAN_EQUAL math_expr
   89          | math_expr . LESS_THAN math_expr
   90          | math_expr . LESS_THAN_EQUAL math_expr
   91          | math_expr . PLUS math_expr
   91          | math_expr PLUS math_expr .
   92          | math_expr . MINUS math_expr
   93          | math_expr . TIMES math_expr
   94          | math_expr . DIVIDE math_expr
   95          | math_expr . MODULUS math_expr
   96          | math_expr . EXPONENT math_expr

    TIMES     shift, and go to state 81
    DIVIDE    shift, and go to state 82
    MODULUS   shift, and go to state 83
    EXPONENT  shift, and go to state 84

    $default  reduce using rule 91 (math_expr)


state 113

   82 math_expr: math_expr . OR math_expr
   83          | math_expr . AND math_expr
   85          | math_expr . EQUAL math_expr
   86          | math_expr . NOTEQUAL math_expr
   87          | math_expr . GREATER_THAN math_expr
   88          | math_expr . GREATER_THAN_EQUAL math_expr
   89          | math_expr . LESS_THAN math_expr
   90          | math_expr . LESS_THAN_EQUAL math_expr
   91          | math_expr . PLUS math_expr
   92          | math_expr . MINUS math_expr
   92          | math_expr MINUS math_expr .
   93          | math_expr . TIMES math_expr
   94          | math_expr . DIVIDE math_expr
   95          | math_expr . MODULUS math_expr
   96          | math_expr . EXPONENT math_expr

    TIMES     shift, and go to state 81
    DIVIDE    shift, and go to state 82
    MODULUS   shift, and go to state 83
    EXPONENT  shift, and go to state 84

    $default  reduce using rule 92 (math_expr)


state 114

   82 math_expr: math_expr . OR math_expr
   83          | math_expr . AND math_expr
   85          | math_expr . EQUAL math_expr
   86          | math_expr . NOTEQUAL math_expr
   87          | math_expr . GREATER_THAN math_expr
   88          | math_expr . GREATER_THAN_EQUAL math_expr
   89          | math_expr . LESS_THAN math_expr
   90          | math_expr . LESS_THAN_EQUAL math_expr
   91          | math_expr . PLUS math_expr
   92          | math_expr . MINUS math_expr
   93          | math_expr . TIMES math_expr
   93          | math_expr TIMES math_expr .
   94          | math_expr . DIVIDE math_expr
   95          | math_expr . MODULUS math_expr
   96          | math_expr . EXPONENT math_expr

    EXPONENT  shift, and go to state 84

    $default  reduce using rule 93 (math_expr)


state 115

   82 math_expr: math_expr . OR math_expr
   83          | math_expr . AND math_expr
   85          | math_expr . EQUAL math_expr
   86          | math_expr . NOTEQUAL math_expr
   87          | math_expr . GREATER_THAN math_expr
   88          | math_expr . GREATER_THAN_EQUAL math_expr
   89          | math_expr . LESS_THAN math_expr
   90          | math_expr . LESS_THAN_EQUAL math_expr
   91          | math_expr . PLUS math_expr
   92          | math_expr . MINUS math_expr
   93          | math_expr . TIMES math_expr
   94          | math_expr . DIVIDE math_expr
   94          | math_expr DIVIDE math_expr .
   95          | math_expr . MODULUS math_expr
   96          | math_expr . EXPONENT math_expr

    EXPONENT  shift, and go to state 84

    $default  reduce using rule 94 (math_expr)


state 116

   82 math_expr: math_expr . OR math_expr
   83          | math_expr . AND math_expr
   85          | math_expr . EQUAL math_expr
   86          | math_expr . NOTEQUAL math_expr
   87          | math_expr . GREATER_THAN math_expr
   88          | math_expr . GREATER_THAN_EQUAL math_expr
   89          | math_expr . LESS_THAN math_expr
   90          | math_expr . LESS_THAN_EQUAL math_expr
   91          | math_expr . PLUS math_expr
   92          | math_expr . MINUS math_expr
   93          | math_expr . TIMES math_expr
   94          | math_expr . DIVIDE math_expr
   95          | math_expr . MODULUS math_expr
   95          | math_expr MODULUS math_expr .
   96          | math_expr . EXPONENT math_expr

    EXPONENT  shift, and go to state 84

    $default  reduce using rule 95 (math_expr)


state 117

   82 math_expr: math_expr . OR math_expr
   83          | math_expr . AND math_expr
   85          | math_expr . EQUAL math_expr
   86          | math_expr . NOTEQUAL math_expr
   87          | math_expr . GREATER_THAN math_expr
   88          | math_expr . GREATER_THAN_EQUAL math_expr
   89          | math_expr . LESS_THAN math_expr
   90          | math_expr . LESS_THAN_EQUAL math_expr
   91          | math_expr . PLUS math_expr
   92          | math_expr . MINUS math_expr
   93          | math_expr . TIMES math_expr
   94          | math_expr . DIVIDE math_expr
   95          | math_expr . MODULUS math_expr
   96          | math_expr . EXPONENT math_expr
   96          | math_expr EXPONENT math_expr .

    EXPONENT  shift, and go to state 84

    $default  reduce using rule 96 (math_expr)


state 118

   82 math_expr: math_expr . OR math_expr
   83          | math_expr . AND math_expr
   83          | math_expr AND math_expr .
   85          | math_expr . EQUAL math_expr
   86          | math_expr . NOTEQUAL math_expr
   87          | math_expr . GREATER_THAN math_expr
   88          | math_expr . GREATER_THAN_EQUAL math_expr
   89          | math_expr . LESS_THAN math_expr
   90          | math_expr . LESS_THAN_EQUAL math_expr
   91          | math_expr . PLUS math_expr
   92          | math_expr . MINUS math_expr
   93          | math_expr . TIMES math_expr
   94          | math_expr . DIVIDE math_expr
   95          | math_expr . MODULUS math_expr
   96          | math_expr . EXPONENT math_expr

    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TIMES               shift, and go to state 81
    DIVIDE              shift, and go to state 82
    MODULUS             shift, and go to state 83
    EXPONENT            shift, and go to state 84
    EQUAL               shift, and go to state 87
    NOTEQUAL            shift, and go to state 88
    GREATER_THAN        shift, and go to state 89
    GREATER_THAN_EQUAL  shift, and go to state 90
    LESS_THAN           shift, and go to state 91
    LESS_THAN_EQUAL     shift, and go to state 92

    $default  reduce using rule 83 (math_expr)


state 119

   82 math_expr: math_expr . OR math_expr
   82          | math_expr OR math_expr .
   83          | math_expr . AND math_expr
   85          | math_expr . EQUAL math_expr
   86          | math_expr . NOTEQUAL math_expr
   87          | math_expr . GREATER_THAN math_expr
   88          | math_expr . GREATER_THAN_EQUAL math_expr
   89          | math_expr . LESS_THAN math_expr
   90          | math_expr . LESS_THAN_EQUAL math_expr
   91          | math_expr . PLUS math_expr
   92          | math_expr . MINUS math_expr
   93          | math_expr . TIMES math_expr
   94          | math_expr . DIVIDE math_expr
   95          | math_expr . MODULUS math_expr
   96          | math_expr . EXPONENT math_expr

    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TIMES               shift, and go to state 81
    DIVIDE              shift, and go to state 82
    MODULUS             shift, and go to state 83
    EXPONENT            shift, and go to state 84
    AND                 shift, and go to state 85
    EQUAL               shift, and go to state 87
    NOTEQUAL            shift, and go to state 88
    GREATER_THAN        shift, and go to state 89
    GREATER_THAN_EQUAL  shift, and go to state 90
    LESS_THAN           shift, and go to state 91
    LESS_THAN_EQUAL     shift, and go to state 92

    $default  reduce using rule 82 (math_expr)


state 120

   82 math_expr: math_expr . OR math_expr
   83          | math_expr . AND math_expr
   85          | math_expr . EQUAL math_expr
   85          | math_expr EQUAL math_expr .
   86          | math_expr . NOTEQUAL math_expr
   87          | math_expr . GREATER_THAN math_expr
   88          | math_expr . GREATER_THAN_EQUAL math_expr
   89          | math_expr . LESS_THAN math_expr
   90          | math_expr . LESS_THAN_EQUAL math_expr
   91          | math_expr . PLUS math_expr
   92          | math_expr . MINUS math_expr
   93          | math_expr . TIMES math_expr
   94          | math_expr . DIVIDE math_expr
   95          | math_expr . MODULUS math_expr
   96          | math_expr . EXPONENT math_expr

    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TIMES               shift, and go to state 81
    DIVIDE              shift, and go to state 82
    MODULUS             shift, and go to state 83
    EXPONENT            shift, and go to state 84
    GREATER_THAN        shift, and go to state 89
    GREATER_THAN_EQUAL  shift, and go to state 90
    LESS_THAN           shift, and go to state 91
    LESS_THAN_EQUAL     shift, and go to state 92

    $default  reduce using rule 85 (math_expr)


state 121

   82 math_expr: math_expr . OR math_expr
   83          | math_expr . AND math_expr
   85          | math_expr . EQUAL math_expr
   86          | math_expr . NOTEQUAL math_expr
   86          | math_expr NOTEQUAL math_expr .
   87          | math_expr . GREATER_THAN math_expr
   88          | math_expr . GREATER_THAN_EQUAL math_expr
   89          | math_expr . LESS_THAN math_expr
   90          | math_expr . LESS_THAN_EQUAL math_expr
   91          | math_expr . PLUS math_expr
   92          | math_expr . MINUS math_expr
   93          | math_expr . TIMES math_expr
   94          | math_expr . DIVIDE math_expr
   95          | math_expr . MODULUS math_expr
   96          | math_expr . EXPONENT math_expr

    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TIMES               shift, and go to state 81
    DIVIDE              shift, and go to state 82
    MODULUS             shift, and go to state 83
    EXPONENT            shift, and go to state 84
    GREATER_THAN        shift, and go to state 89
    GREATER_THAN_EQUAL  shift, and go to state 90
    LESS_THAN           shift, and go to state 91
    LESS_THAN_EQUAL     shift, and go to state 92

    $default  reduce using rule 86 (math_expr)


state 122

   82 math_expr: math_expr . OR math_expr
   83          | math_expr . AND math_expr
   85          | math_expr . EQUAL math_expr
   86          | math_expr . NOTEQUAL math_expr
   87          | math_expr . GREATER_THAN math_expr
   87          | math_expr GREATER_THAN math_expr .
   88          | math_expr . GREATER_THAN_EQUAL math_expr
   89          | math_expr . LESS_THAN math_expr
   90          | math_expr . LESS_THAN_EQUAL math_expr
   91          | math_expr . PLUS math_expr
   92          | math_expr . MINUS math_expr
   93          | math_expr . TIMES math_expr
   94          | math_expr . DIVIDE math_expr
   95          | math_expr . MODULUS math_expr
   96          | math_expr . EXPONENT math_expr

    PLUS      shift, and go to state 79
    MINUS     shift, and go to state 80
    TIMES     shift, and go to state 81
    DIVIDE    shift, and go to state 82
    MODULUS   shift, and go to state 83
    EXPONENT  shift, and go to state 84

    $default  reduce using rule 87 (math_expr)


state 123

   82 math_expr: math_expr . OR math_expr
   83          | math_expr . AND math_expr
   85          | math_expr . EQUAL math_expr
   86          | math_expr . NOTEQUAL math_expr
   87          | math_expr . GREATER_THAN math_expr
   88          | math_expr . GREATER_THAN_EQUAL math_expr
   88          | math_expr GREATER_THAN_EQUAL math_expr .
   89          | math_expr . LESS_THAN math_expr
   90          | math_expr . LESS_THAN_EQUAL math_expr
   91          | math_expr . PLUS math_expr
   92          | math_expr . MINUS math_expr
   93          | math_expr . TIMES math_expr
   94          | math_expr . DIVIDE math_expr
   95          | math_expr . MODULUS math_expr
   96          | math_expr . EXPONENT math_expr

    PLUS      shift, and go to state 79
    MINUS     shift, and go to state 80
    TIMES     shift, and go to state 81
    DIVIDE    shift, and go to state 82
    MODULUS   shift, and go to state 83
    EXPONENT  shift, and go to state 84

    $default  reduce using rule 88 (math_expr)


state 124

   82 math_expr: math_expr . OR math_expr
   83          | math_expr . AND math_expr
   85          | math_expr . EQUAL math_expr
   86          | math_expr . NOTEQUAL math_expr
   87          | math_expr . GREATER_THAN math_expr
   88          | math_expr . GREATER_THAN_EQUAL math_expr
   89          | math_expr . LESS_THAN math_expr
   89          | math_expr LESS_THAN math_expr .
   90          | math_expr . LESS_THAN_EQUAL math_expr
   91          | math_expr . PLUS math_expr
   92          | math_expr . MINUS math_expr
   93          | math_expr . TIMES math_expr
   94          | math_expr . DIVIDE math_expr
   95          | math_expr . MODULUS math_expr
   96          | math_expr . EXPONENT math_expr

    PLUS      shift, and go to state 79
    MINUS     shift, and go to state 80
    TIMES     shift, and go to state 81
    DIVIDE    shift, and go to state 82
    MODULUS   shift, and go to state 83
    EXPONENT  shift, and go to state 84

    $default  reduce using rule 89 (math_expr)


state 125

   82 math_expr: math_expr . OR math_expr
   83          | math_expr . AND math_expr
   85          | math_expr . EQUAL math_expr
   86          | math_expr . NOTEQUAL math_expr
   87          | math_expr . GREATER_THAN math_expr
   88          | math_expr . GREATER_THAN_EQUAL math_expr
   89          | math_expr . LESS_THAN math_expr
   90          | math_expr . LESS_THAN_EQUAL math_expr
   90          | math_expr LESS_THAN_EQUAL math_expr .
   91          | math_expr . PLUS math_expr
   92          | math_expr . MINUS math_expr
   93          | math_expr . TIMES math_expr
   94          | math_expr . DIVIDE math_expr
   95          | math_expr . MODULUS math_expr
   96          | math_expr . EXPONENT math_expr

    PLUS      shift, and go to state 79
    MINUS     shift, and go to state 80
    TIMES     shift, and go to state 81
    DIVIDE    shift, and go to state 82
    MODULUS   shift, and go to state 83
    EXPONENT  shift, and go to state 84

    $default  reduce using rule 90 (math_expr)


state 126

   34 function_declaration: DEF VOID IDENTIFIER LEFT_PAREN . parameter_list RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE SEMICOLON

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    STRING  shift, and go to state 3
    CHAR    shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 37 (parameter_list)

    variable_type   go to state 142
    parameter_list  go to state 143
    parameter       go to state 144


state 127

   33 function_declaration: DEF variable_type IDENTIFIER LEFT_PAREN . parameter_list RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    STRING  shift, and go to state 3
    CHAR    shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 37 (parameter_list)

    variable_type   go to state 142
    parameter_list  go to state 145
    parameter       go to state 144


state 128

   32 variable_assignment: IDENTIFIER ASSIGN condtional_expr SEMICOLON .

    $default  reduce using rule 32 (variable_assignment)


state 129

   46 argument: IDENTIFIER ASSIGN . condtional_expr

    INT_VALUE         shift, and go to state 43
    FLOAT_VALUE       shift, and go to state 44
    STRING_VALUE      shift, and go to state 45
    CHAR_VALUE        shift, and go to state 46
    BOOL_VALUE_TRUE   shift, and go to state 47
    BOOL_VALUE_FALSE  shift, and go to state 48
    IDENTIFIER        shift, and go to state 49
    NOT               shift, and go to state 50
    LEFT_PAREN        shift, and go to state 51

    CONST_VALUE            go to state 53
    function_call_in_expr  go to state 54
    condtional_expr        go to state 146
    math_expr              go to state 56


state 130

   40 function_call: IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 147


state 131

   42 argument_list: argument_list COMMA . argument

    INT_VALUE         shift, and go to state 43
    FLOAT_VALUE       shift, and go to state 44
    STRING_VALUE      shift, and go to state 45
    CHAR_VALUE        shift, and go to state 46
    BOOL_VALUE_TRUE   shift, and go to state 47
    BOOL_VALUE_FALSE  shift, and go to state 48
    IDENTIFIER        shift, and go to state 96
    NOT               shift, and go to state 50
    LEFT_PAREN        shift, and go to state 51

    CONST_VALUE            go to state 53
    function_call_in_expr  go to state 54
    argument               go to state 148
    condtional_expr        go to state 99
    math_expr              go to state 56


state 132

   19 variable_declaration: variable_type IDENTIFIER ASSIGN condtional_expr . SEMICOLON

    SEMICOLON  shift, and go to state 149


state 133

   79 for_init_expr: IDENTIFIER ASSIGN condtional_expr .

    $default  reduce using rule 79 (for_init_expr)


state 134

   78 for_init_expr: variable_type IDENTIFIER ASSIGN . condtional_expr

    INT_VALUE         shift, and go to state 43
    FLOAT_VALUE       shift, and go to state 44
    STRING_VALUE      shift, and go to state 45
    CHAR_VALUE        shift, and go to state 46
    BOOL_VALUE_TRUE   shift, and go to state 47
    BOOL_VALUE_FALSE  shift, and go to state 48
    IDENTIFIER        shift, and go to state 49
    NOT               shift, and go to state 50
    LEFT_PAREN        shift, and go to state 51

    CONST_VALUE            go to state 53
    function_call_in_expr  go to state 54
    condtional_expr        go to state 150
    math_expr              go to state 56


state 135

   72 for_statement: FOR LEFT_PAREN for_init_expr SEMICOLON condtional_expr . SEMICOLON for_loop_do RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE

    SEMICOLON  shift, and go to state 151


state 136

   53 while_statement: WHILE LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE . program RIGHT_BRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    STRING      shift, and go to state 3
    CHAR        shift, and go to state 4
    BOOL        shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    DO          shift, and go to state 8
    BREAK       shift, and go to state 9
    CONTINUE    shift, and go to state 10
    IF          shift, and go to state 11
    SWITCH      shift, and go to state 12
    CONSTANT    shift, and go to state 13
    RETURN      shift, and go to state 14
    DEF         shift, and go to state 15
    COMMENT     shift, and go to state 16
    IDENTIFIER  shift, and go to state 17

    program                     go to state 152
    statement                   go to state 19
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 137

   54 do_statement: DO LEFT_BRACE program RIGHT_BRACE WHILE . LEFT_PAREN condtional_expr RIGHT_PAREN SEMICOLON

    LEFT_PAREN  shift, and go to state 153


state 138

   47 if_statement: IF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE . program RIGHT_BRACE
   48             | IF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE . program RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACE
   49             | IF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE . program RIGHT_BRACE elseif_expr

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    STRING      shift, and go to state 3
    CHAR        shift, and go to state 4
    BOOL        shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    DO          shift, and go to state 8
    BREAK       shift, and go to state 9
    CONTINUE    shift, and go to state 10
    IF          shift, and go to state 11
    SWITCH      shift, and go to state 12
    CONSTANT    shift, and go to state 13
    RETURN      shift, and go to state 14
    DEF         shift, and go to state 15
    COMMENT     shift, and go to state 16
    IDENTIFIER  shift, and go to state 17

    program                     go to state 154
    statement                   go to state 19
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 139

   59 switch_statement: SWITCH LEFT_PAREN IDENTIFIER RIGHT_PAREN LEFT_BRACE . switch_case_list RIGHT_BRACE

    CASE     shift, and go to state 155
    DEFAULT  shift, and go to state 156

    switch_case_list  go to state 157
    switch_case       go to state 158


state 140

   26 const_variable_declaration: CONSTANT variable_type IDENTIFIER ASSIGN condtional_expr . SEMICOLON

    SEMICOLON  shift, and go to state 159


state 141

   41 function_call_in_expr: IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN .

    $default  reduce using rule 41 (function_call_in_expr)


state 142

   38 parameter: variable_type . IDENTIFIER
   39          | variable_type . IDENTIFIER ASSIGN condtional_expr

    IDENTIFIER  shift, and go to state 160


state 143

   34 function_declaration: DEF VOID IDENTIFIER LEFT_PAREN parameter_list . RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE SEMICOLON
   35 parameter_list: parameter_list . COMMA parameter

    RIGHT_PAREN  shift, and go to state 161
    COMMA        shift, and go to state 162


state 144

   36 parameter_list: parameter .

    $default  reduce using rule 36 (parameter_list)


state 145

   33 function_declaration: DEF variable_type IDENTIFIER LEFT_PAREN parameter_list . RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE
   35 parameter_list: parameter_list . COMMA parameter

    RIGHT_PAREN  shift, and go to state 163
    COMMA        shift, and go to state 162


state 146

   46 argument: IDENTIFIER ASSIGN condtional_expr .

    $default  reduce using rule 46 (argument)


state 147

   40 function_call: IDENTIFIER LEFT_PAREN argument_list RIGHT_PAREN SEMICOLON .

    $default  reduce using rule 40 (function_call)


state 148

   42 argument_list: argument_list COMMA argument .

    $default  reduce using rule 42 (argument_list)


state 149

   19 variable_declaration: variable_type IDENTIFIER ASSIGN condtional_expr SEMICOLON .

    $default  reduce using rule 19 (variable_declaration)


state 150

   78 for_init_expr: variable_type IDENTIFIER ASSIGN condtional_expr .

    $default  reduce using rule 78 (for_init_expr)


state 151

   72 for_statement: FOR LEFT_PAREN for_init_expr SEMICOLON condtional_expr SEMICOLON . for_loop_do RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE

    INT_VALUE         shift, and go to state 43
    FLOAT_VALUE       shift, and go to state 44
    STRING_VALUE      shift, and go to state 45
    CHAR_VALUE        shift, and go to state 46
    BOOL_VALUE_TRUE   shift, and go to state 47
    BOOL_VALUE_FALSE  shift, and go to state 48
    IDENTIFIER        shift, and go to state 49
    NOT               shift, and go to state 50
    LEFT_PAREN        shift, and go to state 51

    $default  reduce using rule 76 (final_expr)

    CONST_VALUE            go to state 53
    function_call_in_expr  go to state 54
    condtional_expr        go to state 164
    for_loop_do            go to state 165
    final_expr             go to state 166
    math_expr              go to state 56


state 152

    1 program: program . statement
   53 while_statement: WHILE LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program . RIGHT_BRACE

    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    STRING       shift, and go to state 3
    CHAR         shift, and go to state 4
    BOOL         shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    DO           shift, and go to state 8
    BREAK        shift, and go to state 9
    CONTINUE     shift, and go to state 10
    IF           shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONSTANT     shift, and go to state 13
    RETURN       shift, and go to state 14
    DEF          shift, and go to state 15
    COMMENT      shift, and go to state 16
    IDENTIFIER   shift, and go to state 17
    RIGHT_BRACE  shift, and go to state 167

    statement                   go to state 62
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 153

   54 do_statement: DO LEFT_BRACE program RIGHT_BRACE WHILE LEFT_PAREN . condtional_expr RIGHT_PAREN SEMICOLON

    INT_VALUE         shift, and go to state 43
    FLOAT_VALUE       shift, and go to state 44
    STRING_VALUE      shift, and go to state 45
    CHAR_VALUE        shift, and go to state 46
    BOOL_VALUE_TRUE   shift, and go to state 47
    BOOL_VALUE_FALSE  shift, and go to state 48
    IDENTIFIER        shift, and go to state 49
    NOT               shift, and go to state 50
    LEFT_PAREN        shift, and go to state 51

    CONST_VALUE            go to state 53
    function_call_in_expr  go to state 54
    condtional_expr        go to state 168
    math_expr              go to state 56


state 154

    1 program: program . statement
   47 if_statement: IF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program . RIGHT_BRACE
   48             | IF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program . RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACE
   49             | IF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program . RIGHT_BRACE elseif_expr

    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    STRING       shift, and go to state 3
    CHAR         shift, and go to state 4
    BOOL         shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    DO           shift, and go to state 8
    BREAK        shift, and go to state 9
    CONTINUE     shift, and go to state 10
    IF           shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONSTANT     shift, and go to state 13
    RETURN       shift, and go to state 14
    DEF          shift, and go to state 15
    COMMENT      shift, and go to state 16
    IDENTIFIER   shift, and go to state 17
    RIGHT_BRACE  shift, and go to state 169

    statement                   go to state 62
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 155

   62 switch_case: CASE . switch_case_value COLON LEFT_BRACE program RIGHT_BRACE

    INT_VALUE         shift, and go to state 170
    CHAR_VALUE        shift, and go to state 171
    BOOL_VALUE_TRUE   shift, and go to state 172
    BOOL_VALUE_FALSE  shift, and go to state 173

    switch_case_value  go to state 174


state 156

   63 switch_case: DEFAULT . COLON LEFT_BRACE program RIGHT_BRACE

    COLON  shift, and go to state 175


state 157

   59 switch_statement: SWITCH LEFT_PAREN IDENTIFIER RIGHT_PAREN LEFT_BRACE switch_case_list . RIGHT_BRACE
   60 switch_case_list: switch_case_list . switch_case

    CASE         shift, and go to state 155
    DEFAULT      shift, and go to state 156
    RIGHT_BRACE  shift, and go to state 176

    switch_case  go to state 177


state 158

   61 switch_case_list: switch_case .

    $default  reduce using rule 61 (switch_case_list)


state 159

   26 const_variable_declaration: CONSTANT variable_type IDENTIFIER ASSIGN condtional_expr SEMICOLON .

    $default  reduce using rule 26 (const_variable_declaration)


state 160

   38 parameter: variable_type IDENTIFIER .
   39          | variable_type IDENTIFIER . ASSIGN condtional_expr

    ASSIGN  shift, and go to state 178

    $default  reduce using rule 38 (parameter)


state 161

   34 function_declaration: DEF VOID IDENTIFIER LEFT_PAREN parameter_list RIGHT_PAREN . LEFT_BRACE program RIGHT_BRACE SEMICOLON

    LEFT_BRACE  shift, and go to state 179


state 162

   35 parameter_list: parameter_list COMMA . parameter

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    STRING  shift, and go to state 3
    CHAR    shift, and go to state 4
    BOOL    shift, and go to state 5

    variable_type  go to state 142
    parameter      go to state 180


state 163

   33 function_declaration: DEF variable_type IDENTIFIER LEFT_PAREN parameter_list RIGHT_PAREN . LEFT_BRACE program RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 181


state 164

   75 final_expr: condtional_expr .

    $default  reduce using rule 75 (final_expr)


state 165

   72 for_statement: FOR LEFT_PAREN for_init_expr SEMICOLON condtional_expr SEMICOLON for_loop_do . RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE

    RIGHT_PAREN  shift, and go to state 182


state 166

   73 for_loop_do: final_expr . COMMA final_expr
   74            | final_expr .

    COMMA  shift, and go to state 183

    $default  reduce using rule 74 (for_loop_do)


state 167

   53 while_statement: WHILE LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE .

    $default  reduce using rule 53 (while_statement)


state 168

   54 do_statement: DO LEFT_BRACE program RIGHT_BRACE WHILE LEFT_PAREN condtional_expr . RIGHT_PAREN SEMICOLON

    RIGHT_PAREN  shift, and go to state 184


state 169

   47 if_statement: IF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE .
   48             | IF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE . ELSE LEFT_BRACE program RIGHT_BRACE
   49             | IF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE . elseif_expr

    ELSE    shift, and go to state 185
    ELSEIF  shift, and go to state 186

    $default  reduce using rule 47 (if_statement)

    elseif_expr  go to state 187


state 170

   64 switch_case_value: INT_VALUE .

    $default  reduce using rule 64 (switch_case_value)


state 171

   65 switch_case_value: CHAR_VALUE .

    $default  reduce using rule 65 (switch_case_value)


state 172

   66 switch_case_value: BOOL_VALUE_TRUE .

    $default  reduce using rule 66 (switch_case_value)


state 173

   67 switch_case_value: BOOL_VALUE_FALSE .

    $default  reduce using rule 67 (switch_case_value)


state 174

   62 switch_case: CASE switch_case_value . COLON LEFT_BRACE program RIGHT_BRACE

    COLON  shift, and go to state 188


state 175

   63 switch_case: DEFAULT COLON . LEFT_BRACE program RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 189


state 176

   59 switch_statement: SWITCH LEFT_PAREN IDENTIFIER RIGHT_PAREN LEFT_BRACE switch_case_list RIGHT_BRACE .

    $default  reduce using rule 59 (switch_statement)


state 177

   60 switch_case_list: switch_case_list switch_case .

    $default  reduce using rule 60 (switch_case_list)


state 178

   39 parameter: variable_type IDENTIFIER ASSIGN . condtional_expr

    INT_VALUE         shift, and go to state 43
    FLOAT_VALUE       shift, and go to state 44
    STRING_VALUE      shift, and go to state 45
    CHAR_VALUE        shift, and go to state 46
    BOOL_VALUE_TRUE   shift, and go to state 47
    BOOL_VALUE_FALSE  shift, and go to state 48
    IDENTIFIER        shift, and go to state 49
    NOT               shift, and go to state 50
    LEFT_PAREN        shift, and go to state 51

    CONST_VALUE            go to state 53
    function_call_in_expr  go to state 54
    condtional_expr        go to state 190
    math_expr              go to state 56


state 179

   34 function_declaration: DEF VOID IDENTIFIER LEFT_PAREN parameter_list RIGHT_PAREN LEFT_BRACE . program RIGHT_BRACE SEMICOLON

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    STRING      shift, and go to state 3
    CHAR        shift, and go to state 4
    BOOL        shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    DO          shift, and go to state 8
    BREAK       shift, and go to state 9
    CONTINUE    shift, and go to state 10
    IF          shift, and go to state 11
    SWITCH      shift, and go to state 12
    CONSTANT    shift, and go to state 13
    RETURN      shift, and go to state 14
    DEF         shift, and go to state 15
    COMMENT     shift, and go to state 16
    IDENTIFIER  shift, and go to state 17

    program                     go to state 191
    statement                   go to state 19
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 180

   35 parameter_list: parameter_list COMMA parameter .

    $default  reduce using rule 35 (parameter_list)


state 181

   33 function_declaration: DEF variable_type IDENTIFIER LEFT_PAREN parameter_list RIGHT_PAREN LEFT_BRACE . program RIGHT_BRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    STRING      shift, and go to state 3
    CHAR        shift, and go to state 4
    BOOL        shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    DO          shift, and go to state 8
    BREAK       shift, and go to state 9
    CONTINUE    shift, and go to state 10
    IF          shift, and go to state 11
    SWITCH      shift, and go to state 12
    CONSTANT    shift, and go to state 13
    RETURN      shift, and go to state 14
    DEF         shift, and go to state 15
    COMMENT     shift, and go to state 16
    IDENTIFIER  shift, and go to state 17

    program                     go to state 192
    statement                   go to state 19
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 182

   72 for_statement: FOR LEFT_PAREN for_init_expr SEMICOLON condtional_expr SEMICOLON for_loop_do RIGHT_PAREN . LEFT_BRACE program RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 193


state 183

   73 for_loop_do: final_expr COMMA . final_expr

    INT_VALUE         shift, and go to state 43
    FLOAT_VALUE       shift, and go to state 44
    STRING_VALUE      shift, and go to state 45
    CHAR_VALUE        shift, and go to state 46
    BOOL_VALUE_TRUE   shift, and go to state 47
    BOOL_VALUE_FALSE  shift, and go to state 48
    IDENTIFIER        shift, and go to state 49
    NOT               shift, and go to state 50
    LEFT_PAREN        shift, and go to state 51

    $default  reduce using rule 76 (final_expr)

    CONST_VALUE            go to state 53
    function_call_in_expr  go to state 54
    condtional_expr        go to state 164
    final_expr             go to state 194
    math_expr              go to state 56


state 184

   54 do_statement: DO LEFT_BRACE program RIGHT_BRACE WHILE LEFT_PAREN condtional_expr RIGHT_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 195


state 185

   48 if_statement: IF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE . LEFT_BRACE program RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 196


state 186

   50 elseif_expr: ELSEIF . LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE
   51            | ELSEIF . LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACE
   52            | ELSEIF . LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE elseif_expr

    LEFT_PAREN  shift, and go to state 197


state 187

   49 if_statement: IF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE elseif_expr .

    $default  reduce using rule 49 (if_statement)


state 188

   62 switch_case: CASE switch_case_value COLON . LEFT_BRACE program RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 198


state 189

   63 switch_case: DEFAULT COLON LEFT_BRACE . program RIGHT_BRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    STRING      shift, and go to state 3
    CHAR        shift, and go to state 4
    BOOL        shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    DO          shift, and go to state 8
    BREAK       shift, and go to state 9
    CONTINUE    shift, and go to state 10
    IF          shift, and go to state 11
    SWITCH      shift, and go to state 12
    CONSTANT    shift, and go to state 13
    RETURN      shift, and go to state 14
    DEF         shift, and go to state 15
    COMMENT     shift, and go to state 16
    IDENTIFIER  shift, and go to state 17

    program                     go to state 199
    statement                   go to state 19
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 190

   39 parameter: variable_type IDENTIFIER ASSIGN condtional_expr .

    $default  reduce using rule 39 (parameter)


state 191

    1 program: program . statement
   34 function_declaration: DEF VOID IDENTIFIER LEFT_PAREN parameter_list RIGHT_PAREN LEFT_BRACE program . RIGHT_BRACE SEMICOLON

    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    STRING       shift, and go to state 3
    CHAR         shift, and go to state 4
    BOOL         shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    DO           shift, and go to state 8
    BREAK        shift, and go to state 9
    CONTINUE     shift, and go to state 10
    IF           shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONSTANT     shift, and go to state 13
    RETURN       shift, and go to state 14
    DEF          shift, and go to state 15
    COMMENT      shift, and go to state 16
    IDENTIFIER   shift, and go to state 17
    RIGHT_BRACE  shift, and go to state 200

    statement                   go to state 62
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 192

    1 program: program . statement
   33 function_declaration: DEF variable_type IDENTIFIER LEFT_PAREN parameter_list RIGHT_PAREN LEFT_BRACE program . RIGHT_BRACE

    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    STRING       shift, and go to state 3
    CHAR         shift, and go to state 4
    BOOL         shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    DO           shift, and go to state 8
    BREAK        shift, and go to state 9
    CONTINUE     shift, and go to state 10
    IF           shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONSTANT     shift, and go to state 13
    RETURN       shift, and go to state 14
    DEF          shift, and go to state 15
    COMMENT      shift, and go to state 16
    IDENTIFIER   shift, and go to state 17
    RIGHT_BRACE  shift, and go to state 201

    statement                   go to state 62
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 193

   72 for_statement: FOR LEFT_PAREN for_init_expr SEMICOLON condtional_expr SEMICOLON for_loop_do RIGHT_PAREN LEFT_BRACE . program RIGHT_BRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    STRING      shift, and go to state 3
    CHAR        shift, and go to state 4
    BOOL        shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    DO          shift, and go to state 8
    BREAK       shift, and go to state 9
    CONTINUE    shift, and go to state 10
    IF          shift, and go to state 11
    SWITCH      shift, and go to state 12
    CONSTANT    shift, and go to state 13
    RETURN      shift, and go to state 14
    DEF         shift, and go to state 15
    COMMENT     shift, and go to state 16
    IDENTIFIER  shift, and go to state 17

    program                     go to state 202
    statement                   go to state 19
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 194

   73 for_loop_do: final_expr COMMA final_expr .

    $default  reduce using rule 73 (for_loop_do)


state 195

   54 do_statement: DO LEFT_BRACE program RIGHT_BRACE WHILE LEFT_PAREN condtional_expr RIGHT_PAREN SEMICOLON .

    $default  reduce using rule 54 (do_statement)


state 196

   48 if_statement: IF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE . program RIGHT_BRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    STRING      shift, and go to state 3
    CHAR        shift, and go to state 4
    BOOL        shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    DO          shift, and go to state 8
    BREAK       shift, and go to state 9
    CONTINUE    shift, and go to state 10
    IF          shift, and go to state 11
    SWITCH      shift, and go to state 12
    CONSTANT    shift, and go to state 13
    RETURN      shift, and go to state 14
    DEF         shift, and go to state 15
    COMMENT     shift, and go to state 16
    IDENTIFIER  shift, and go to state 17

    program                     go to state 203
    statement                   go to state 19
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 197

   50 elseif_expr: ELSEIF LEFT_PAREN . condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE
   51            | ELSEIF LEFT_PAREN . condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACE
   52            | ELSEIF LEFT_PAREN . condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE elseif_expr

    INT_VALUE         shift, and go to state 43
    FLOAT_VALUE       shift, and go to state 44
    STRING_VALUE      shift, and go to state 45
    CHAR_VALUE        shift, and go to state 46
    BOOL_VALUE_TRUE   shift, and go to state 47
    BOOL_VALUE_FALSE  shift, and go to state 48
    IDENTIFIER        shift, and go to state 49
    NOT               shift, and go to state 50
    LEFT_PAREN        shift, and go to state 51

    CONST_VALUE            go to state 53
    function_call_in_expr  go to state 54
    condtional_expr        go to state 204
    math_expr              go to state 56


state 198

   62 switch_case: CASE switch_case_value COLON LEFT_BRACE . program RIGHT_BRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    STRING      shift, and go to state 3
    CHAR        shift, and go to state 4
    BOOL        shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    DO          shift, and go to state 8
    BREAK       shift, and go to state 9
    CONTINUE    shift, and go to state 10
    IF          shift, and go to state 11
    SWITCH      shift, and go to state 12
    CONSTANT    shift, and go to state 13
    RETURN      shift, and go to state 14
    DEF         shift, and go to state 15
    COMMENT     shift, and go to state 16
    IDENTIFIER  shift, and go to state 17

    program                     go to state 205
    statement                   go to state 19
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 199

    1 program: program . statement
   63 switch_case: DEFAULT COLON LEFT_BRACE program . RIGHT_BRACE

    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    STRING       shift, and go to state 3
    CHAR         shift, and go to state 4
    BOOL         shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    DO           shift, and go to state 8
    BREAK        shift, and go to state 9
    CONTINUE     shift, and go to state 10
    IF           shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONSTANT     shift, and go to state 13
    RETURN       shift, and go to state 14
    DEF          shift, and go to state 15
    COMMENT      shift, and go to state 16
    IDENTIFIER   shift, and go to state 17
    RIGHT_BRACE  shift, and go to state 206

    statement                   go to state 62
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 200

   34 function_declaration: DEF VOID IDENTIFIER LEFT_PAREN parameter_list RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE . SEMICOLON

    SEMICOLON  shift, and go to state 207


state 201

   33 function_declaration: DEF variable_type IDENTIFIER LEFT_PAREN parameter_list RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE .

    $default  reduce using rule 33 (function_declaration)


state 202

    1 program: program . statement
   72 for_statement: FOR LEFT_PAREN for_init_expr SEMICOLON condtional_expr SEMICOLON for_loop_do RIGHT_PAREN LEFT_BRACE program . RIGHT_BRACE

    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    STRING       shift, and go to state 3
    CHAR         shift, and go to state 4
    BOOL         shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    DO           shift, and go to state 8
    BREAK        shift, and go to state 9
    CONTINUE     shift, and go to state 10
    IF           shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONSTANT     shift, and go to state 13
    RETURN       shift, and go to state 14
    DEF          shift, and go to state 15
    COMMENT      shift, and go to state 16
    IDENTIFIER   shift, and go to state 17
    RIGHT_BRACE  shift, and go to state 208

    statement                   go to state 62
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 203

    1 program: program . statement
   48 if_statement: IF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE program . RIGHT_BRACE

    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    STRING       shift, and go to state 3
    CHAR         shift, and go to state 4
    BOOL         shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    DO           shift, and go to state 8
    BREAK        shift, and go to state 9
    CONTINUE     shift, and go to state 10
    IF           shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONSTANT     shift, and go to state 13
    RETURN       shift, and go to state 14
    DEF          shift, and go to state 15
    COMMENT      shift, and go to state 16
    IDENTIFIER   shift, and go to state 17
    RIGHT_BRACE  shift, and go to state 209

    statement                   go to state 62
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 204

   50 elseif_expr: ELSEIF LEFT_PAREN condtional_expr . RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE
   51            | ELSEIF LEFT_PAREN condtional_expr . RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACE
   52            | ELSEIF LEFT_PAREN condtional_expr . RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE elseif_expr

    RIGHT_PAREN  shift, and go to state 210


state 205

    1 program: program . statement
   62 switch_case: CASE switch_case_value COLON LEFT_BRACE program . RIGHT_BRACE

    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    STRING       shift, and go to state 3
    CHAR         shift, and go to state 4
    BOOL         shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    DO           shift, and go to state 8
    BREAK        shift, and go to state 9
    CONTINUE     shift, and go to state 10
    IF           shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONSTANT     shift, and go to state 13
    RETURN       shift, and go to state 14
    DEF          shift, and go to state 15
    COMMENT      shift, and go to state 16
    IDENTIFIER   shift, and go to state 17
    RIGHT_BRACE  shift, and go to state 211

    statement                   go to state 62
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 206

   63 switch_case: DEFAULT COLON LEFT_BRACE program RIGHT_BRACE .

    $default  reduce using rule 63 (switch_case)


state 207

   34 function_declaration: DEF VOID IDENTIFIER LEFT_PAREN parameter_list RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE SEMICOLON .

    $default  reduce using rule 34 (function_declaration)


state 208

   72 for_statement: FOR LEFT_PAREN for_init_expr SEMICOLON condtional_expr SEMICOLON for_loop_do RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE .

    $default  reduce using rule 72 (for_statement)


state 209

   48 if_statement: IF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACE .

    $default  reduce using rule 48 (if_statement)


state 210

   50 elseif_expr: ELSEIF LEFT_PAREN condtional_expr RIGHT_PAREN . LEFT_BRACE program RIGHT_BRACE
   51            | ELSEIF LEFT_PAREN condtional_expr RIGHT_PAREN . LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACE
   52            | ELSEIF LEFT_PAREN condtional_expr RIGHT_PAREN . LEFT_BRACE program RIGHT_BRACE elseif_expr

    LEFT_BRACE  shift, and go to state 212


state 211

   62 switch_case: CASE switch_case_value COLON LEFT_BRACE program RIGHT_BRACE .

    $default  reduce using rule 62 (switch_case)


state 212

   50 elseif_expr: ELSEIF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE . program RIGHT_BRACE
   51            | ELSEIF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE . program RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACE
   52            | ELSEIF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE . program RIGHT_BRACE elseif_expr

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    STRING      shift, and go to state 3
    CHAR        shift, and go to state 4
    BOOL        shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    DO          shift, and go to state 8
    BREAK       shift, and go to state 9
    CONTINUE    shift, and go to state 10
    IF          shift, and go to state 11
    SWITCH      shift, and go to state 12
    CONSTANT    shift, and go to state 13
    RETURN      shift, and go to state 14
    DEF         shift, and go to state 15
    COMMENT     shift, and go to state 16
    IDENTIFIER  shift, and go to state 17

    program                     go to state 213
    statement                   go to state 19
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 213

    1 program: program . statement
   50 elseif_expr: ELSEIF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program . RIGHT_BRACE
   51            | ELSEIF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program . RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACE
   52            | ELSEIF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program . RIGHT_BRACE elseif_expr

    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    STRING       shift, and go to state 3
    CHAR         shift, and go to state 4
    BOOL         shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    DO           shift, and go to state 8
    BREAK        shift, and go to state 9
    CONTINUE     shift, and go to state 10
    IF           shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONSTANT     shift, and go to state 13
    RETURN       shift, and go to state 14
    DEF          shift, and go to state 15
    COMMENT      shift, and go to state 16
    IDENTIFIER   shift, and go to state 17
    RIGHT_BRACE  shift, and go to state 214

    statement                   go to state 62
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 214

   50 elseif_expr: ELSEIF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE .
   51            | ELSEIF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE . ELSE LEFT_BRACE program RIGHT_BRACE
   52            | ELSEIF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE . elseif_expr

    ELSE    shift, and go to state 215
    ELSEIF  shift, and go to state 186

    $default  reduce using rule 50 (elseif_expr)

    elseif_expr  go to state 216


state 215

   51 elseif_expr: ELSEIF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE . LEFT_BRACE program RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 217


state 216

   52 elseif_expr: ELSEIF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE elseif_expr .

    $default  reduce using rule 52 (elseif_expr)


state 217

   51 elseif_expr: ELSEIF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE . program RIGHT_BRACE

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    STRING      shift, and go to state 3
    CHAR        shift, and go to state 4
    BOOL        shift, and go to state 5
    FOR         shift, and go to state 6
    WHILE       shift, and go to state 7
    DO          shift, and go to state 8
    BREAK       shift, and go to state 9
    CONTINUE    shift, and go to state 10
    IF          shift, and go to state 11
    SWITCH      shift, and go to state 12
    CONSTANT    shift, and go to state 13
    RETURN      shift, and go to state 14
    DEF         shift, and go to state 15
    COMMENT     shift, and go to state 16
    IDENTIFIER  shift, and go to state 17

    program                     go to state 218
    statement                   go to state 19
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 218

    1 program: program . statement
   51 elseif_expr: ELSEIF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE program . RIGHT_BRACE

    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    STRING       shift, and go to state 3
    CHAR         shift, and go to state 4
    BOOL         shift, and go to state 5
    FOR          shift, and go to state 6
    WHILE        shift, and go to state 7
    DO           shift, and go to state 8
    BREAK        shift, and go to state 9
    CONTINUE     shift, and go to state 10
    IF           shift, and go to state 11
    SWITCH       shift, and go to state 12
    CONSTANT     shift, and go to state 13
    RETURN       shift, and go to state 14
    DEF          shift, and go to state 15
    COMMENT      shift, and go to state 16
    IDENTIFIER   shift, and go to state 17
    RIGHT_BRACE  shift, and go to state 219

    statement                   go to state 62
    expr                        go to state 20
    variable_declaration        go to state 21
    const_variable_declaration  go to state 22
    variable_type               go to state 23
    variable_assignment         go to state 24
    function_declaration        go to state 25
    function_call               go to state 26
    if_statement                go to state 27
    while_statement             go to state 28
    do_statement                go to state 29
    switch_statement            go to state 30
    break_statement             go to state 31
    continue_statement          go to state 32
    return_statement            go to state 33
    for_statement               go to state 34


state 219

   51 elseif_expr: ELSEIF LEFT_PAREN condtional_expr RIGHT_PAREN LEFT_BRACE program RIGHT_BRACE ELSE LEFT_BRACE program RIGHT_BRACE .

    $default  reduce using rule 51 (elseif_expr)
